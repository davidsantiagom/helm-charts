apiVersion: v1
kind: Pod
metadata:
  name: test-net-cross-{{ .Values.tenant }}
  labels:
    fcp/control: "CTRL-NET-CROSS"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "{{ .Values.test.hookWeight.netTests }}"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
spec:
  restartPolicy: Never
  containers:
  - name: test
    image: {{ .Values.images.curl }}
    env:
    - name: TARGET_NS
      value: "{{ .Values.targetNamespace }}"
    - name: ECHO_SVC
      value: "{{ .Values.echoServiceName }}"
    - name: ECHO_PORT
      value: "{{ .Values.echoPort }}"
    command: ["/bin/sh", "-c"]
    args:
    - |-
      set -eu
      
      # Color definitions
      RED='\033[0;31m'
      GREEN='\033[0;32m'
      BOLD='\033[1m'
      NC='\033[0m' # No Color
      
      echo "Testing cross-tenant network isolation..."
      URL="http://${ECHO_SVC}.${TARGET_NS}.svc.cluster.local:${ECHO_PORT}/"
      echo "Attempting connection to: ${URL}"
      
      code=$(timeout 10 curl -sS -m 5 -o /dev/null -w '%{http_code}' "$URL" 2>/dev/null || echo "timeout")
      
      if [ "$code" = "200" ]; then
        printf "${RED}${BOLD}FAILED CTRL-NET-CROSS - cross-tenant traffic ALLOWED (HTTP 200)${NC}\n"
        printf "${RED}Cross-tenant network isolation is NOT working${NC}\n"
      elif [ "$code" = "timeout" ] || [ "$code" = "000" ] || [ -z "$code" ]; then
        printf "${GREEN}${BOLD}PASSED CTRL-NET-CROSS - cross-tenant traffic BLOCKED (connection failed)${NC}\n"
        printf "${GREEN}Cross-tenant network isolation is working correctly${NC}\n"
      else
        printf "${GREEN}${BOLD}PASSED CTRL-NET-CROSS - cross-tenant traffic BLOCKED (HTTP ${code})${NC}\n"
        printf "${GREEN}Cross-tenant network isolation is working correctly${NC}\n"
      fi
